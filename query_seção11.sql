USE COMERCIO;

SHOW TABLES;

SELECT C.NOME, C.EMAIL, E.ESTADO, T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;


-- FUNÇÃO IFNULL - esta função é utilizada para substituir o valor NULL por outro valor
SELECT C.NOME, 
	   IFNULL(EMAIL, '********') as EMAIL, 
       E.ESTADO, 
       T.NUMERO
FROM CLIENTE C
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE;


/* A view pode ser definida como uma tabela virtual composta por linhas e colunas de dados vindos 
de tabelas relacionadas em uma query (um agrupamento de SELECT’s, por exemplo). As linhas e colunas
da view são geradas dinamicamente no momento em que é feita uma referência a ela.
*/
SELECT C.NOME, 
       C.SEXO, 
       C.EMAIL, 
       T.TIPO, 
       T.NUMERO, 
       E.BAIRRO, 
       E.CIDADE, 
       E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

-- CRIANDO A VIEW: 
CREATE VIEW RELATORIO AS 
SELECT C.NOME, 
       C.SEXO, 
       C.EMAIL, 
       T.TIPO, 
       T.NUMERO, 
       E.BAIRRO, 
       E.CIDADE, 
       E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM RELATORIO;
SHOW TABLES;

-- APAGAR UMA VIEW
DROP VIEW RELATORIO;

-- CRIANDO UMA VIEW COM PREFIXO 
CREATE VIEW V_RELATORIO AS 
SELECT C.NOME, 
       C.SEXO, 
       IFNULL(C.EMAIL, 'SEM EMAIL') as EMAIL,
       T.TIPO, 
       T.NUMERO, 
       E.BAIRRO, 
       E.CIDADE, 
       E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE;

SELECT * FROM V_RELATORIO;

-- QUERY DE UMA VIEW
SELECT NOME, NUMERO AS NÚMERO, ESTADO 
FROM V_RELATORIO;

-- DML em VIEWS (update, insert delete) no caso de views com jon só é possível fazer update(dml)

INSERT INTO V_RELATORIO VALUES(
'ANDREIA', 'F', 'ANDREIA@HOTMAIL.COM', 'CEL', '85744658', 'CENTRO', 'VITORIA', 'ES');

SELECT * FROM V_RELATORIO
WHERE SEXO = 'F';


-- ORDER BY

CREATE TABLE ALUNOS(
	NUMERO INT,
	NOME VARCHAR(30)
);

show TABLES;

INSERT INTO ALUNOS VALUES(1,'JOAO');
INSERT INTO ALUNOS VALUES(1,'MARIA');
INSERT INTO ALUNOS VALUES(2,'ZOE');
INSERT INTO ALUNOS VALUES(2,'ANDRE');
INSERT INTO ALUNOS VALUES(3,'CLARA');
INSERT INTO ALUNOS VALUES(1,'CLARA');
INSERT INTO ALUNOS VALUES(4,'MAFRA');
INSERT INTO ALUNOS VALUES(5,'JANAINA');
INSERT INTO ALUNOS VALUES(1,'JANAINA');
INSERT INTO ALUNOS VALUES(3,'MARCELO');
INSERT INTO ALUNOS VALUES(4,'GIOVANI');
INSERT INTO ALUNOS VALUES(5,'ANTONIO');
INSERT INTO ALUNOS VALUES(6,'ANA');
INSERT INTO ALUNOS VALUES(6,'VIVIANE');

SELECT * FROM ALUNOS
ORDER BY 1;
SELECT * FROM ALUNOS
ORDER BY NUMERO, NOME;

-- ORDER BY DESC ASC
SELECT * FROM ALUNOS
ORDER BY 1 ASC;

SELECT * FROM ALUNOS
ORDER BY 1 DESC;


-- ORDENANDO COM JOIN

SELECT C.NOME, 
       C.SEXO, 
       IFNULL(C.EMAIL, 'SEM EMAIL') as EMAIL,
       T.TIPO, 
       T.NUMERO, 
       E.BAIRRO, 
       E.CIDADE, 
       E.ESTADO
FROM CLIENTE C
INNER JOIN TELEFONE T
ON C.IDCLIENTE = T.ID_CLIENTE
INNER JOIN ENDERECO E
ON C.IDCLIENTE = E.ID_CLIENTE
ORDER BY 1;

SELECT * FROM V_RELATORIO
ORDER BY 1;









