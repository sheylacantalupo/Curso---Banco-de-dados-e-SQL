create table TB_EMPRESA(
ID INT,
NOME VARCHAR(50)
)
GO

USE EMPRESA
GO

CREATE TABLE ALUNO(
IDALUNO INT PRIMARY KEY IDENTITY,
NOME VARCHAR(30) NOT NULL,
SEXO CHAR(1) NOT NULL,
NASCIMENTO DATE NOT NULL,
EMAIL VARCHAR(30) UNIQUE
)
GO

ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK (SEXO IN ('M','F'))
GO

/*  RELACIONAMENTO 1 X 1   */
create table ENDERECO(
IDENDERECO INT PRIMARY KEY IDENTITY(100,10),
BAIRRO VARCHAR(30),
UF CHAR(2) NOT NULL CHECK (UF IN('RJ','SP','MG')),
ID_ALUNO INT UNIQUE
)
GO

/*  CRIANDO A FK  */
ALTER TABLE ENDERECO 
ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY(ID_ALUNO) REFERENCES ALUNO(IDALUNO)
GO


/*  COMANDOS DE DESCRIÇÃO - PROCIDURES JÁ CRIANDAS E ARMAZENADAS NO SISTEMA */

SP_COLUMNS ALUNO
GO

SP_HELP ALUNO
GO

/*  INSERINDO DADOS  */
INSERT INTO ALUNO VALUES('ANDRE','M','1987/10/12','ANDRE@GMAIL.COM')
INSERT INTO ALUNO VALUES('MARIA','F','1995/01/10','MARIAANTONIA@GMAIL.COM')
INSERT INTO ALUNO VALUES('FELIPE','M','1998/02/05','FEFELIPE@GMAIL.COM')
GO

SELECT * FROM ALUNO 
GO

/*  INSERINDO DADOS  */

INSERT INTO ENDERECO VALUES('FLAMENGO','RJ',1)
INSERT INTO ENDERECO VALUES('RUA DO RIO','MG',2)
INSERT INTO ENDERECO VALUES('RUA MANOS','SP',3)
GO

/*  CRIANDO TABELA TELEFONE RELANIONAMENTO 1 X N */

CREATE TABLE TELEFONE(
IDTELEFONE INT PRIMARY KEY IDENTITY,
TIPO CHAR(3) NOT NULL,
NUMERO VARCHAR(10) NOT NULL,
ID_ALUNO INT,
CHECK (TIPO IN ('RES', 'COM', 'CEL'))
)
GO

SELECT * FROM ENDERECO
GO

INSERT INTO TELEFONE VALUES('CEL','25478547',1)
INSERT INTO TELEFONE VALUES('RES','52647487',1)
INSERT INTO TELEFONE VALUES('COM','12547854',2)
INSERT INTO TELEFONE VALUES('CEL','96587412',2)
INSERT INTO TELEFONE VALUES('CEL','89879654',3)
GO

SELECT * FROM TELEFONE
GO

/*  PEGAR DATA ATUAL DO SISTEMA */
SELECT GETDATE()
GO

/*  CLAUSULA AMBIGUA */
SELECT A.NOME, T.TIPO, T.NUMERO, E.BAIRRO, E.UF
FROM ALUNO A LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO 
INNER JOIN ENDERECO E
ON A.IDALUNO = T.ID_ALUNO
GO

/*  IFNULL */
SELECT A.NOME,
		ISNULL(T.TIPO, 'SEM') AS "TIPO", 
		ISNULL(T.NUMERO, 'NUMERO') AS "TELEFONE", 
		E.BAIRRO, 
		E.UF
FROM ALUNO A LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO 
INNER JOIN ENDERECO E
ON A.IDALUNO = T.ID_ALUNO
GO


/*  DATAS */
SELECT *
FROM ALUNO 
GO

SELECT NOME, NASCIMENTO
FROM ALUNO
GO

/*  DATEDIFF - CALCULA A DIFERENÇA ENTRE DATAS */
SELECT NOME, GETDATE() AS DIA_HORA FROM ALUNO
GO

SELECT NOME, DATEDIFF(DAY, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, (DATEDIFF(DAY, NASCIMENTO, GETDATE())/365) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, (DATEDIFF(DAY, NASCIMENTO, GETDATE())/365) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, DATEDIFF(YEAR, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, DATENAME(MONTH, NASCIMENTO) 
FROM ALUNO
GO

SELECT NOME, DATENAME(WEEKDAY, NASCIMENTO) 
FROM ALUNO
GO

SELECT NOME, DATEPART(MONTH, NASCIMENTO) 
FROM ALUNO
GO

SELECT NOME, DATEPART(MONTH, NASCIMENTO), DATENAME(MONTH, NASCIMENTO)
FROM ALUNO
GO


/*  DATEADD - RETORNA UMA DATA SOMANDO A OUTRA DATA */
SELECT DATEADD(DAY,365, GETDATE())

SELECT DATEADD(YEAR,10, GETDATE())


/*  CONVERSAO DE DADOS */
SELECT '1' + 1
GO

SELECT '1' + '1'
GO

/*  FUNÇÕES DE CONVERSAO DE DADOS */

SELECT CAST('1' AS INT) + CAST('1' AS INT)
GO

/* CONVERSAO E CONCATENACAO 
https://msdn.microsoft.com/en-us/library/ms191530.aspx
*/

SELECT NOME, NASCIMENTO
FROM ALUNO
GO

SELECT NOME, DAY(NASCIMENTO) + '/' + MONTH(NASCIMENTO) + '/' + YEAR(NASCIMENTO)
FROM ALUNO
GO

SELECT NOME, 
CAST(DAY(NASCIMENTO) AS VARCHAR) +'/' + 
CAST(MONTH(NASCIMENTO) AS VARCHAR) + '/' + 
CAST(YEAR(NASCIMENTO) AS VARCHAR)
FROM ALUNO
GO


/*CHARINDEX - RETORNA UM INTEIRO 
CONTAGEM DEFAULT - INICIA EM 01
*/

SELECT NOME, CHARINDEX('A', NOME) AS INDICE
FROM ALUNO
GO

SELECT NOME, CHARINDEX('A',NOME,2) AS INDICE
FROM ALUNO
GO


/* BULK INSERT - IMPORTACAO DE ARQUIVOS */

CREATE TABLE LANCAMENTO_CONTABIL(
	CONTA INT,
	VALOR INT,
	DEB_CRED CHAR(1)
)
GO

SELECT * FROM LANCAMENTO_CONTABIL
GO

BULK INSERT LANCAMENTO_CONTABIL
FROM 'C:\CONTAS.txt'
WITH
(
	FIRSTROW = 2,
	DATAFILETYPE = 'char',
	FIELDTERMINATOR = '\t',
	ROWTERMINATOR = '\n'

)

select * from LANCAMENTO_CONTABIL

/* DESAFIO DO SALDO 
QUERY QUE TRAGA O NUMERO DA CONTA
SALDO - DEVEDOR OU CREDOR */

SELECT CONTA, VALOR, DEB_CRED,
CHARINDEX('D',DEB_CRED) AS DEBITO,
CHARINDEX('C',DEB_CRED) AS CREDITO,
CHARINDEX('C',DEB_CRED) * 2 - 1 AS MULTIPLICADOR
FROM LANCAMENTO_CONTABIL
GO

SELECT CONTA,
SUM(VALOR * (CHARINDEX('C',DEB_CRED) * 2 - 1)) AS SALDO
FROM LANCAMENTO_CONTABIL
GROUP BY CONTA
GO




