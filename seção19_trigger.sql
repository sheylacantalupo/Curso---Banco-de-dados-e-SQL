-- trigger

-- CREATE TRIGGER NOME
-- BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
-- FOR EACH ROW (PARA CADA LINHA)
-- BEGIN -> INICIO

		-- QUALQUER COMANDO SQL

-- END -> FIM

use information_schema;
show tables;
desc triggers;

create database aula40;
use aula40;

create table usuario(
idusuario int primary key auto_increment,
nome varchar(30),
login varchar(30),
senha varchar(100)
);

create table bkp_usuario(
idbackup int primary key auto_increment,
idusuario int,
nome varchar(30),
login varchar(30)
);

-- criando a trigger
delimiter $
create trigger backup_user
before delete on usuario
for each row
begin

	insert into bkp_usuario 
    values(null,old.idusuario,old.nome,old.login);


end 
$

insert into usuario values(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO');
delimiter ;

select * from usuario;
delete from usuario where idusuario =1;


select * from bkp_usuario;


-- comunicação entre bancos


CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);


CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0);

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$
DELIMITER ;


INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

select * FROM PRODUTO;
select * FROM BACKUP.BKP_PRODUTO;


DELIMITER $
CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$
DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER ;
INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);

-- ADICIONAR UMA COLUNA EVENTO NA TABELA PRODUTO
ALTER TABLE BACKUP.BKP_PRODUTO
ADD EVENTO CHAR(1);
SELECT * FROM BACKUP.BKP_PRODUTO;

DROP TRIGGER BACKUP_PRODUTO_DEL;


CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR,'D');

END
$
DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;


-- TRIGGER DE AUDITORIA

DROP DATABASE LOJA;
DROP DATABASE BACKUP;

CREATE DATABASE LOJA;
USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

UPDATE PRODUTO SET VALOR = 110.00
WHERE IDPRODUTO = 4;

-- QUANDO E QUEM
SELECT NOW();
SELECT current_user();

CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
	
);
USE LOJA;

SELECT * FROM PRODUTO;


USE LOJA;

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN

	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,
	OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'U');
	
END
$

DELIMITER ;



SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;
